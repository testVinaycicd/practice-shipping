name: DB SCHEMA IMAGE
on: workflow_dispatch

jobs:
  build-db-image:
    runs-on: ubuntu-latest
    steps:
      - name: Call from other repo
        uses: actions/checkout@v5

      - name: Display input tag
        run: echo "tag=${{ inputs.tag }}"

      - name: Component name
        run: echo "component name=catalogue-db"

      - name: Check docker
        run: |
          if command -v docker >/dev/null 2>&1; then
            docker --version
          else
            echo "docker not found"
            # fallback install (use Docker repo method if you really need to)
            sudo apt-get update
            sudo apt-get install -y docker.io
            sudo systemctl start docker
            docker --version
          fi

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: crysis307
          password: ${{ secrets.DTKN }}

      - name: Set up Docker Buildx (docker-container builder)

        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container
          install: true


      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./db
          push: true
          tags: crysis307/shipping-schema:latest,crysis307/shipping-schema:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Scan image with Trivy
        uses: aquasecurity/trivy-action@master
        continue-on-error: true
        with:
          image-ref: crysis307/shipping-schema:${{ github.sha }}
          format: "sarif"
          exit-code: '1'   # fail build on critical
          vuln-type: 'os,library'
        env:
          # suppress CLI version check so the action doesn't fail on minor Trivy releases
          TRIVY_SKIP_VERSION_CHECK: 'true'